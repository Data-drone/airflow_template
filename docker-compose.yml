version: '3.7'

x-common-variables: &common-variables
  POSTGRES_USER: ${AF_POSTGRES_USER}
  POSTGRES_PASSWORD: ${AF_POSTGRES_PASSWORD}
  POSTGRES_DB: ${AF_POSTGRES_DB}
  POSTGRES_PORT: ${AF_POSTGRES_PORT}
  POSTGRES_HOST: ${AF_POSTGRES_HOST}
  REDIS_HOST: ${REDIS_HOST}
  REDIS_PORT: ${REDIS_PORT}
  AF_USER_NAME: ${AF_USER_NAME} 
  AF_USER_PASSWORD: ${AF_USER_PASSWORD} 
  AF_USER_FIRST_NAME: ${AF_USER_FIRST_NAME} 
  AF_USER_LAST_NAME: ${AF_USER_LAST_NAME} 
  AF_USER_EMAIL: ${AF_USER_EMAIL} 
  AF_USER_ROLE: ${AF_USER_ROLE}
  MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY} 
  MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
  AIRFLOW__CORE__DAGS_FOLDER: ${AIRFLOW__CORE__DAGS_FOLDER}
  AIRFLOW__CORE__ENABLE_XCOM_PICKLING: ${AIRFLOW__CORE__ENABLE_XCOM_PICKLING}

services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks: 
      - ml_platform

  airflow_db:
    image: postgres:10.5
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${AF_POSTGRES_USER}
      POSTGRES_PASSWORD: ${AF_POSTGRES_PASSWORD}
      POSTGRES_DB: ${AF_POSTGRES_DB}
      POSTGRES_PORT: ${AF_POSTGRES_PORT}
      POSTGRES_HOST: ${AF_POSTGRES_HOST}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U airflow" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: 
      - ml_platform

  airflow-webserver:
    build: 
      context: ./scheduler
    restart: always
    command: webserver
    depends_on:
      airflow_db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      <<: *common-variables
    volumes:
      - ../ml_platform_dags/projects:/root/airflow/ext_dags
      - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test: [ "CMD-SHELL", "[ -f /airflow/airflow-webserver.pid ]" ]
      interval: 30s
      timeout: 30s
      retries: 3
    networks: 
      - ml_platform

  airflow-worker-1:
    build: 
      context: ./scheduler
    command: worker
    restart: always
    depends_on:
      - airflow-webserver
    ports:
      - "8081:8080"
    environment:
      <<: *common-variables
    volumes:
      - ../ml_platform_dags/projects:/root/airflow/ext_dags
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - QUEUE_NAME=queue_1
    networks: 
      - ml_platform

  airflow-worker-2:
    build: 
      context: ./scheduler
    command: worker
    restart: always
    depends_on:
      - airflow-webserver
    ports:
      - "8082:8080"
    environment:
      <<: *common-variables
    volumes:
      - ../ml_platform_dags/projects:/root/airflow/ext_dags
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - QUEUE_NAME=queue_2
    networks: 
      - ml_platform

  airflow-flower:
    build: 
      context: ./scheduler
    command: flower
    restart: always
    depends_on:
      - airflow-worker-1
      - airflow-worker-2
    ports:
      - "5555:5555"
    environment:
      <<: *common-variables
    volumes:
      - ../ml_platform_dags/projects:/root/airflow/ext_dags
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks: 
      - ml_platform

networks:
  ml_platform:
    external: true